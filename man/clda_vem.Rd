% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{clda_vem}
\alias{clda_vem}
\title{cLDA: Variational Expectation Maximization}
\usage{
clda_vem(num_topics, vocab_size, docs_cid, docs_tf, alpha_h, gamma_h, eta_h,
  vi_max_iter, em_max_iter, vi_conv_thresh, em_conv_thresh, tau_max_iter,
  tau_step_size, estimate_alpha, estimate_gamma, estimate_eta, verbose, init_pi,
  test_doc_share = 0, test_word_share = 0)
}
\arguments{
\item{num_topics}{Number of topics in the corpus}

\item{vocab_size}{Vocabulary size}

\item{docs_cid}{Documents collection IDs (ID indices starts 0)}

\item{docs_tf}{A list of corpus documents read from the Blei corpus using
\code{\link{read_docs}} (term indices starts with 0)}

\item{alpha_h}{Hyperparameter for collection-level Dirichlets \eqn{\pi}}

\item{gamma_h}{Hyperparameter for document-level Dirichlets \eqn{\theta}}

\item{eta_h}{Hyperparameter for corpus level topic Dirichlets \eqn{\beta}}

\item{vi_max_iter}{Maximum number of iterations for variational inference}

\item{em_max_iter}{Maximum number of iterations for variational EM}

\item{vi_conv_thresh}{Convergence threshold for the document variational inference loop}

\item{em_conv_thresh}{Convergence threshold for the variational EM loop}

\item{tau_max_iter}{Maximum number of iterations for the constraint Newton updates of \eqn{\tau}}

\item{tau_step_size}{the step size for the constraint Newton updates of \eqn{\tau}}

\item{estimate_alpha}{If true, run hyperparameter \eqn{\alpha} optimization}

\item{estimate_gamma}{dummy parameter [not implemented]}

\item{estimate_eta}{If true, run hyperparameter \eqn{\eta} optimization}

\item{verbose}{from {0, 1, 2, 3}}

\item{init_pi}{the initial configuration for the collection level topic
mixtures, i.e., \eqn{\pi} samples}

\item{test_doc_share}{proportion of the test documents in the corpus.
Must be from [0., 1.)}

\item{test_word_share}{proportion of the test words in each test document.
Must be from [0., 1.)}
}
\value{
A list of variational parameters
}
\description{
This implements the Variational Expectation Maximization (EM) algorithm for
the compound latent Dirichlet allocation (cLDA) model.
}
\details{
To compute perplexity, we first partition words in a corpus into two sets:
(a) a test set (held-out set), which is selected from the set of words in
the test (held-out) documents (identified via \code{test_doc_share} and
\code{test_word_share}) and (b) a training set, i.e., the remaining words in
the corpus. We then run the variational EM algorithm based on the training
set. Finally, we compute per-word perplexity based on the held-out set.
}
\note{
Created on May 13, 2016
}
